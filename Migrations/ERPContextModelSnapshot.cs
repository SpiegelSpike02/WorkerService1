// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkerService1.Contexts;

#nullable disable

namespace WorkerService1.Migrations
{
    [DbContext(typeof(ERPContext))]
    partial class ERPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorkerService1.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("WorkerService1.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Approval")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BigPack")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Expiry")
                        .HasColumnType("date");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MidPack")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProducerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("ProductDate")
                        .HasColumnType("date");

                    b.Property<string>("Specs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StockAmount")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WorkerService1.Models.hhyy", b =>
                {
                    b.Property<string>("skuCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("amount")
                        .HasColumnType("int");

                    b.Property<string>("approvalNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("bigPackAmount")
                        .HasColumnType("int");

                    b.Property<string>("factoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isdeleted")
                        .HasColumnType("int");

                    b.Property<int?>("middlePackAmount")
                        .HasColumnType("int");

                    b.Property<string>("noSellTip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("priceTip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("saleTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("source")
                        .HasColumnType("int");

                    b.Property<string>("spec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("stockState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("units")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("skuCode");

                    b.ToTable("hhyys");
                });

            modelBuilder.Entity("WorkerService1.Models.Product", b =>
                {
                    b.HasOne("WorkerService1.Models.Platform", "Platform")
                        .WithMany("Products")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("WorkerService1.Models.Platform", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
